#include <Python.h>
#include <glib.h>

#define PYINK_MODULE "pyink"
#define PYINK_START_FUNC "pyink_start"


typedef struct {
    PyObject_HEAD
} pybind_SPDesktopObject;

static PyTypeObject pybind_SPDesktopType = {
    PyObject_HEAD_INIT(NULL)
    0,
    "pybind.SPDesktop",
    sizeof(pybind_SPDesktopObject),
    0,				/*tp_itemsize*/
    0,				/*tp_dealloc*/
    0,				/*tp_print*/
    0,				/*tp_getattr*/
    0,				/*tp_setattr*/
    0,				/*tp_compare*/
    0,				/*tp_repr*/
    0,				/*tp_as_number*/
    0,				/*tp_as_sequence*/
    0,				/*tp_as_mapping*/
    0,				/*tp_hash */
    0,				/*tp_call*/
    0,				/*tp_str*/
    0,				/*tp_getattro*/
    0,				/*tp_setattro*/
    0,				/*tp_as_buffer*/
    Py_TPFLAGS_DEFAULT,		/*tp_flags*/
    "SPDesktop of Inkscape",	/* tp_doc */
};

static PyObject *
pybind_hello(PyObject *self, PyObject *args) {
    return PyString_FromString("world");
}

static PyMethodDef pybind_methods[] = {
    {"hello", pybind_hello, METH_VARARGS, "Always return 'world'."},
    {NULL, NULL, 0, NULL}	/* Sentinel */
};

extern "C" void initpybInkscape(void);

namespace Inkscape {
namespace PyBind {

int
init(void) {
    PyObject *m;
    PyObject *pyink;
    PyObject *pyink_start_func;
    PyObject *pyink_start_result;
    
    Py_Initialize();

    pybind_SPDesktopType.tp_new = PyType_GenericNew;
    if (PyType_Ready(&pybind_SPDesktopType) < 0)
        return -1;

    m = Py_InitModule3("pybind", pybind_methods,
		       "Binding of Inkscape");
    Py_INCREF(&pybind_SPDesktopType);

    PyRun_SimpleString("import pybind;"
		       "print 'Checking python bindings: hello %s' % (pybind.hello());");

    /*
     * This is the function generated by Cython for pybInkscape.pyx
     * module.
     */
    initpybInkscape();

    pyink = PyImport_ImportModule(PYINK_MODULE);
    if(pyink == NULL) {
	PyErr_Print();
	g_warning(PYINK_MODULE ": can not be loaded");
	return -1;
    }
    pyink_start_func = PyObject_GetAttrString(pyink, PYINK_START_FUNC);
    if(pyink_start_func == NULL || !PyCallable_Check(pyink_start_func)) {
	g_warning(PYINK_START_FUNC ": is not a callable");
	return  -1;
    }

    pyink_start_result = PyObject_CallObject(pyink_start_func, NULL);
    if(pyink_start_result == NULL) {
	PyErr_Print();
	return -1;
    }

    return 0;
}

int
final(void) {
    Py_Finalize();
    return 0;
}

} // namespace PyBind
} // namespace Inkscape

/*
  Local Variables:
  mode:c++
  c-file-style:"stroustrup"
  c-file-offsets:((innamespace . 0)(inline-open . 0)(case-label . +))
  indent-tabs-mode:nil
  fill-column:99
  End:
*/
// vim: filetype=cpp:expandtab:shiftwidth=4:tabstop=8:softtabstop=4:encoding=utf-8:textwidth=99 :
